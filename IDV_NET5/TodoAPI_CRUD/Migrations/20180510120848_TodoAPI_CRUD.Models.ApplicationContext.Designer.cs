// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;
using TodoAPI_CRUD.Models;

namespace TodoAPI_CRUD.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20180510120848_TodoAPI_CRUD.Models.ApplicationContext")]
    partial class TodoAPI_CRUDModelsApplicationContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FichierCentral", b =>
                {
                    b.Property<long>("PK")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abonnement")
                        .IsRequired();

                    b.Property<DateTime>("DateCreation");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<string>("Nom")
                        .IsRequired();

                    b.Property<int>("PkAbonnemnt");

                    b.Property<int>("PkCategorieAbonnement");

                    b.Property<int>("PkProfil");

                    b.Property<string>("Prenom")
                        .IsRequired();

                    b.Property<Guid>("UserId");

                    b.HasKey("PK");

                    b.ToTable("FichierCentral");

                    b.HasDiscriminator<string>("Discriminator").HasValue("FichierCentral");
                });

            modelBuilder.Entity("Abonnements", b =>
                {
                    b.HasBaseType("FichierCentral");

                    b.Property<DateTime>("DateDebut");

                    b.Property<DateTime>("DateFin");

                    b.Property<long>("ID");

                    b.Property<long>("PKAbonnement");

                    b.Property<long>("PkAbonne");

                    b.Property<long>("Prix_Abonnement");

                    b.ToTable("Abonnements");

                    b.HasDiscriminator().HasValue("Abonnements");
                });
#pragma warning restore 612, 618
        }
    }
}
